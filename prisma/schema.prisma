  // This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
//npx prisma generate       PARA GENERAR EL SCHEMA
// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //previewFeatures = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Edificios {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  ancho Int?
  largo Int?
  nivel Int?
  costo Int?
  descripcion String?
  recursoPorMinuto Int?
  tipoRecurso String?
  ultimaInteraccion DateTime?
//----------------------------------------------------------------------------------
//---------------------------------------------------------------------------- SEBA ----------------

 cantidad  Int?// canatidad de capacidad de contruccion de unidades de este tipo de edificio        |

///////////////////////////////////////////////////////////////////////////////////////////
//-------------SOLO ESO  EN EDIFICIO----------------------




  userEdificios UserEdificios[]
 
}

model Users{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String @unique
  email String @unique
  hash String?
  profileImage String?
  salt String?
  nivel Int
  madera Int
  piedra Int
  pan Int
  unidadesDeTrabajo Int?
  ///------------------------------------------------------------------------------------------------
  ///------------------------------------SEBA-------------------------------------------------------
  canon Int?
  maderera Int?
  panaderia Int?
  ayuntamiento Int?
  cantera Int?
  muros Int?
  bosque Int?
  herreria Int?
  //------------------------------------------------------------------------------------------------
  //--------------------------------SOLO ESO----------------------------------------------------------------












  userEdificios UserEdificios[]
}
model UserEdificios{
    id String @id @default(auto()) @map("_id") @db.ObjectId
  edificioId String @db.ObjectId
  posicion_x Int?
  posicion_y Int?
  userId String @db.ObjectId
  user Users @relation(fields: [userId], references: [id])
  ultimaInteraccion DateTime?
  nivel Int?
  trabajadores Int?

  edificio Edificios @relation(fields: [edificioId], references: [id])
}

